@model HE.WebApp.UserInterface.Models.MealTypesViewModel

<!-- Modal -->
@using (Html.BeginForm("Create", "HomemadeEats", FormMethod.Post, new { role = "form", Id = "CreateMealTypeModalDialogForm", enctype = "multipart/form-data" }))
{
    <div class="modal fade" id="CreateMealTypeModalDialog" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header" style="padding:35px 50px;">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    @Html.AntiForgeryToken()
                    <h4>Create</h4>
                </div>
                <div class="modal-body" style="padding:40px 50px;">
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(m => m.Name, new { @class = "glyphicon glyphicon-cutlery" }, true)
                        <select class="form-control" id="mealTypeDropdown">
                            <option selected="selected" disabled>Select a Meal Type</option>
                            <option value="Breakfast">Breakfast</option>
                            <option value="Lunch">Lunch</option>
                            <option value="Dinner">Dinner</option>
                            <option value="Other">Other</option>
                        </select>
                        <br />
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control hidden", @placeholder = "Enter Meal Type", @Id = "mealTypeTxtBox" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ImageFilePath, new { @class = "glyphicon glyphicon-camera" }, true)
                        <div class="input-group">
                            <span class="input-group-btn">
                                @*<input type="text" id="uploadImageBrowseReadonlyField" name="uploadImageBrowseReadonlyField" class="form-control" readonly>*@
                                @Html.TextBoxFor(m => m.ImageFilePath, new { @class = "form-control", @Id = "uploadImageBrowseReadonlyField", @name = "uploadImageBrowseReadonlyField" })
                                <span class="btn btn-success btn-file" style="border-bottom-right-radius:4px; border-top-right-radius:4px">
                                    Browse&hellip; 
                                    <input type="file" name="uploadedFile">
                                </span>
                            </span>
                        </div>
                    </div>

                    <button type="submit" class="btn btn-success"><span class="glyphicon glyphicon-plus"></span> Create</button>                    
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-danger btn-default pull-left" data-dismiss="modal"><span class="glyphicon glyphicon-remove"></span> Cancel</button>
                </div>
            </div>
        </div>
    </div>
}


@section scripts  {
@Scripts.Render("~/bundles/jqueryval")
<script>
$(document).ready(function(){
    //$("#CreateMealType").click(function () {
    //    $("#CreateMealTypeModal").modal({ backdrop: "static" });
    //});

    $('#CreateMealTypeModalDialog').on('show.bs.modal', function () {
        // Reset all values when the modal shows up
        document.getElementById('CreateMealTypeModalDialogForm').reset();
        //alert("reset modal!");
    })

    //$('.btn-file :file').on('fileselect', function (event, numFiles, label) {
    //    //alert('onFileselect');
    //    var input = $(this).parents('.input-group').find(':text'),
    //        log = numFiles > 0 ? label : 'Upload an image.';
    //    //alert('input text ' + input.text);
    //    //alert('log ' + log);
    //    //alert("input: " + input);
    //    //alert(label);
    //});
});

// This is for the Browse button & for setting the text field to the image selected
$(document).on('change', '.btn-file :file', function () {
    //alert('onChange');
    var input = $(this),
        //numFiles = input.get(0).files ? input.get(0).files.length : 1,
        label = input.val(); //.replace(/\\/g, '/').replace(/.*\//, '');
    //input.trigger('fileselect', [numFiles, label]);
    //alert("label on change " + label);
    $('input[name="ImageFilePath"]').val(label);
});

// logic for displaying the extra text box when user selects option "Other" in the dropdown
$('#mealTypeDropdown').change(
    function () {
        $('#mealTypeTxtBox').val($(this).val());
        //alert("Dropdown option changed");
        if ($(this).val() == "Other") {
            //alert("Dropdown option is Other");
            $('#mealTypeTxtBox').removeClass('hidden');
            //$('#mealTypeTxtBox').fadeIn("3000");  //has no effect & doesn't work
            $('#mealTypeTxtBox').val("");
        }
        else {
            $('#mealTypeTxtBox').addClass('hidden');//.fadeOut("3000");
            //$('#mealTypeTxtBox').fadeOut("3000"); //doesn't work
        }
    }
);

// not sure if I need this at all
$('#CreateMealTypeModalDialog').on('hidden.bs.modal', function () {
    //alert("hidding modal dialog");
    $(this).find('#CreateMealTypeModalDialogForm')[0].reset();

});
</script>
}


